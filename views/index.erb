<!doctype html>  
<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>The HTML5 Herald</title>  
  <meta name="description" content="The HTML5 Herald">  
  <meta name="author" content="SitePoint">  
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="lightbox/css/jquery.lightbox-0.5.css">  
</head>  
<body> 

<!--BEGIN MAIN BLOCK CONTENT -->
<div id="main-content">
	<!--BEGIN SUB NAV LINKS-->
	<div id="sub-nav">
		<ul class="subnav">
			<li class="interact-link"><a href="#" class="sub-link" onclick="return false;"><span data-title="INTERACT">INTERACT</span></a></li>
			<li class="docs-link"><a href="#" class="sub-link" onclick="return false;"><span data-title="DOCS">DOCS</span></a></li>
			<li class="demo-link"><a href="#" class="sub-link" onclick="return false;"><span data-title="DEMO">DEMO</span></a></li>		
		</ul>
	</div>
	<!--END SUB NAV LINKS-->
	<div id="overflow">
		<ul class="slides">
			<li class="slide demo">
				<div id="welcome">
					<h2>Welcome</h2>
					<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed bibendum tempus purus sed aliquet. Nulla facilisi. Morbi vitae nulla vel tellus dignissim fringilla. Morbi vel lorem vitae sapien hendrerit tempus. Curabitur feugiat hendrerit diam, vel eleifend turpis pretium id.</p>
				</div>
				<div class="slide-hide">
					<ul class="planets">
					</ul>
				</div>
				<div class="clear"></div>
			</li>
			<li class="slide">
				<div class="slide-hide">
					<div id="docs">
						<h2>Get Planets</h2>
						<p>You can request all of the current ExoPlanetary data using /planets/all. These queries can also be modified by the sort and fields operators.</p>
						<p>All Planets <span class="code">/planets/all</a></p>
						<p>Planets By Id <span class="code">/planets/[id]</a></p>

						<h2>Search Planets</h2>

						<p>You can search planets using the fieldname=value parameters on /planets/search? These queries can also be modified using the sort and fields operators.</p>

						<p>For instance to find all planets discovered in 2012:<br /><span class="code">/planets/search?discoveryyear=2012</span></p>

						<p>You can also use :gt, :gte, :lt, :lte to execute range style queries. for example to find all planets discovered before 2007:<br /><span class="code">/planets/search?discoveryyear:lt=2007</span></p>

						<h2>Sorting Results</h2>

						<p>Results can be sorted using the sort parameter:<br /><span class="code">/planets/all?sort=[field[:asc|:desc]]</span></p>

						<p>For example, to sort all planets by mass, descending:<br /><span class="code">/planets/all?sort=[properties.mass:desc]</span></p>

						<p>If no directionality is specified, ascending is used for example you can sort the planets by mass asc simply by using:<br /><span class="code">/planets/all?sort=[properties.mass]</span></p>
	

						<p>You can also use multiple sorting parameters by using comma as a delimiter:<br /><span class="code">/planets/all?sort=[discoveryyear:desc,name]</p>

						<p>Note: Not all planets have values for all fields. Currently in the API null values are returned as the greatest value. So a desc sort may return some results with null values for that field as the first several entries.</p>

						<h2>Selecting Specific Fields</h2>

						<p>If you do not want the full output with all planetary information, you can select specific fields that should be returned by the API, for example, to select only the names of planets use:<br /><span class="code">/planets/all?fields=[name]</span></p>

						<p>Note: The _id field is returned in all queries, the above query would return {name, _id} fields for each entry in the API</p>

						<p>Fields should be separated by a comma, to select name and mass from planets with mass > 5, ordered by mass use the following search query:<br /><span class="code">/planets/search?properties.mass:gte=5&amp;fields=[name,properties.mass]&sort=[properties.mass]</span><p/>

						<h2>Current Field List:</h2>

						<p>This is the current list of fields in the database. Note this document may go out of date and more fields may be available (or unavailable if removed). For more information on the format of the underlying data, see here <span class="code">(https://github.com/hannorein/open_exoplanet_catalogue/tree/master/data).</span></p>
						<p>
						id_exoplaneteu<br />
						name<br />
						id<br />
						discoverymethod<br />
						properties ( set )<br />
						properties.mass<br />
						properties.orbit ( set )<br />
						properties.orbit.period<br />
						properties.orbit.semimajoraxis<br />
						properties.orbit.eccentricity<br />
						properties.orbit.incliniation<br />
						star ( set )<br />
						star.spectraltype<br />
						star.mass<br />
						star.radius<br />
						star.metallicity<br />
						star.rightascension<br />
						star.declination<br />
						star.angulardistance<br />
						star.distance<br />
						star.magV<br />
						star.magI<br />
						star.magH<br />
						star.magJ<br />
						star.magK<br />
						multiplicity<br />
						discoveryyear<br />
						lastupdate<br />
						description<br />
						new<br />
						image<br />
						imagedescription<br />
					</p>

					<h2>Paging:</h2>

<p>You may not always want all planets to be returned in your query. To limit the number of results returned by your queries, use limit=[start,count]. For example to return the first 10 planets ordered by name use:<br /><span class="code">/planets/all?sort=[name], limit=10</span></p>

	<p>You can also apply an offset to begin from other points in the data, for example to access the 10 - 20 range, use the following query:<br /><span class="code">/planets/all?sort=[name], limit=10, start=10</span></p>

	<h2>Example Queries:</h2>

<p>To find the names of all planets with a mass less than 5, discovered this year (2012), sorted by mass ascending:<br /><span class="code">/planets/search?properties.mass:lt=5&discoveryyear=2012&sort=[properties.mass]&fields=[name]</code>
</p>

<h2>Response Format:</h2>

<p>The API responses are JSON objects with the following format:</p>

<pre>{ 
"response": 
{
"results": [ {field:value, field2:value2 â€¦ } ], 
"count": 100 
}
 }</pre>





	



	

	
					</div>
				</div>
				<div class="clear"></div>
			</li>
			<li class="slide">
				<div class="slide-hide">
					<div class="api-form">
		
		<form>
			<span>http://www.exoapi.org/api/planets/</span>
			<input id="url_spot" type="text" placeholder="all/"></input>
		
			<p>Filter:</p>
			<ul id="api-tags">
				<li class="deselected"><span>name</span></li>
				<li class="deselected"><span>_id</span></li>
				<li class="deselected"><span>discoverymethod</span></li>
				<li class="deselected"><span>properties.mass</span></li>
				<li class="deselected"><span>properties.radius</span></li>
				<li class="deselected"><span>properties.orbit.period</span></li>
				<li class="deselected"><span>properties.orbit.semimajoraxis</span></li>
				<li class="deselected"><span>properties.orbit.eccentricity</span></li>
				<li class="deselected"><span>properties.orbit.inclination</span></li>
				<li class="deselected"><span>star.spectraltype</span></li>
				<li class="deselected"><span>star.mass</span></li>
				<li class="deselected"><span>star.radius</span></li>
				<li class="deselected"><span>star.metallicity</span></li>
				<li class="deselected"><span>star.rightascension</span></li>
				<li class="deselected"><span>star.declination</span></li>
				<li class="deselected"><span>star.angulardistance</span></li>
				<li class="deselected"><span>star.distance</span></li>
				<li class="deselected"><span>star.magV</span></li>
				<li class="deselected"><span>star.magI</span></li>
				<li class="deselected"><span>star.magH</span></li>
				<li class="deselected"><span>star.magJ</span></li>
				<li class="deselected"><span>star.magK</span></li>
				<li class="deselected"><span>multiplicity</span></li>
				<li class="deselected"><span>discoveryyear</span></li>
				<li class="deselected"><span>lastupdate</span></li>
				<li class="deselected"><span>description</span></li>
				<li class="deselected"><span>new</span></li>
				<li class="deselected"><span>image</span></li>
				<li class="deselected"><span>imagedescription</span></li>
			</ul>
			<!-- END API TAGS -->

			<p>Sort:</p>
			<ul id="sort-opts">
				<li class="sort-on">
					<select class='sort-select'></select>

					<input type="radio" name="sort1" value="asc" checked="checked"> Ascending</input>
					<input type="radio" name="sort1" value="desc"> Descending</input>

					<input type="button" value="add" class="add-button"></input>
				</li>
			</ul>

			<p>Search:</p>
			<ul id="search-opts">
				<li class="search-on">

					<select class='sort-select'></select>

					<!-- <input type="radio" name="search1" value="lt"> &lt;</input>
					<input type="radio" name="search1" value="gt"> &gt;</input>
					<input type="radio" name="search1" value="eq"> ==</input> -->
					<select name="search_type">
						<option value=":gte">&gt;=</option>
						<option value=":gt">&gt;</option>
						<option value="" selected="selected">==</option>
						<option value=":lt">&lt;</option>
						<option value=":lte">&lt;=</option>
					</select>

					<input type="text" placeholder="value"></input>

					<input type="button" value="add" class="add-button"></input>
				</li>
			</ul>

			
			<div class="limit-opts">
				<p>Limit:</p>
				<span class="subtract">-</span>
				<input type="text" class="to-increment" value="0" id="limit_input"></input>
				<span class="add">+</span>
			</div>

			<div class="start-opts">
				<p>Start:</p>
				<span class="subtract">-</span>
				<input type="text" class="to-increment" value="0" id="start_input"></input>
				<span class="add">+</span>
			</div>

			<br />
			<div id="control_buttons">
				<button id="refresh">Refresh URL</button>
				<button id="send">Try Query</button>
			</div>
			<br />

			<div id="api-response">
				<p>Response:</p>
				<textarea readonly="readonly"></textarea>
			</div>
		</form>
	</div>
				</div>
				<div class="clear"></div>
			</li>
		</ul>
	</div>
</div>	
<a class="logo"></a>
<a href="#" class="arrow-rt arrows"></a>
<a href="#" class="arrow-lt arrows"></a>
<div id="page-holder">Demo ///</div>
<!--<div id="descrip"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed bibendum tempus purus sed aliquet. Nulla facilisi. Morbi vitae nulla vel tellus dignissim fringilla. Morbi vel lorem vitae sapien hendrerit tempus. Curabitur feugiat hendrerit diam, vel eleifend turpis pretium id.</p></div>-->

<script src="/js/jquery-1.7.2.min.js"></script>
<script src="/js/jquery.easing.1.3.js"></script>
<script src="/js/plugin.expander.js"></script>
<script src="/js/plugin.navigate.js"></script>
<script src="/js/app.js"></script>
<script src="/lightbox/js/jquery.lightbox-0.5.min.js"></script>

<script>
$(document).ready(function() {

	var image_base_dir = "https://github.com/hannorein/open_exoplanet_catalogue/raw/master/data_images/";
	var image_type = ".iPhone.png";
	// send a post request to the API to get the list of planets
  	$.ajax( 
  	{
  		url: "http://172.16.3.30:4567/api/planets/all?limit=30&sort=[discoveryyear:desc]",
  		success: function(data)
  		{
  			var d = data.response.results;
  			for(var x = 0 ; x < d.length ; x++)
  			{
  				var text = "<li class='planet'>";
  					var name = d[x].name.toString();

  					if(name.length >= 26) name = "<span style='font-size:22px;'>" + name  + "</span>";
  					else if(name.length >= 18) name = "<span style='font-size:26px;'>" + name + "</span>";


  					text += '<div class="roll-trigger">' + 
								'<div class="back-anim"></div>' + 
									'<div class="info">' + 
										'<a href="#" class="filler">' +
											'<h2>'+ name + '</h2>' + 
											'<h3>Discovered in '+d[x].discoveryyear.toString()+'</h3>' + 
										'</a>' + 
									'</div>' + 
								'<a href="#" class="close-button"></a>' + 
					'</div>';

					text += '<div class="expanded">';

					if(isEmpty(d[x].image) == false)
					{
						text += 
								'<div class="image-holder" style="width:360px; height:100px; overflow:hidden;">' + 
									'<img src="'+image_base_dir+d[x].image+image_type+'" style="width:360px;" />' + 
									'<a href="'+image_base_dir+d[x].image+image_type+'" class="expand-image" rel="prettyPhoto"></a>' +  
								'</div>';
					}

					text += '<ul class="info">';


					text += '<li><h3>Name: '+d[x].name+'</h3></li>';
					text += '<li><strong>Discovery Method:</strong> '+getValue(d[x].discoverymethod)+'</li>';
					text += '<li><strong>Mass:</strong> '+getValue(d[x].properties.mass)+'</li>';
					text += '<li><strong>Radius:</strong> '+getValue(d[x].properties.radius)+'</li>' + 
							'<li><strong>Orbit:</strong> ' + 
								'<ul>' +
									'<li>Period: '+getValue(d[x].properties.orbit.period)+'</li>' + 
									'<li>Semimajoraxis: '+getValue(d[x].properties.orbit.semimajoraxis)+'</li>' + 
									'<li>Eccentricity: '+getValue(d[x].properties.orbit.eccentricity)+'</li>' + 
									'<li>Inclination: '+getValue(d[x].properties.orbit.inclination)+'</li>' + 
								'</ul>' + 
							'</li>';

					text += '<li><strong>Star:</strong> ' +
								'<ul>' +
									'<li>Spectraltype: '+getValue(d[x].star.spectraltype)+'</li>' + 
									'<li>Mass: '+getValue(d[x].star.mass)+'</li>' + 
									'<li>Radius: '+getValue(d[x].star.radius)+'</li>' + 
									'<li>Metallicity: '+getValue(d[x].star.metallicity)+'</li>' + 
									'<li>Rightascension: '+getValue(d[x].star.rightascension)+'</li>' + 
									'<li>Declination: '+getValue(d[x].star.declination)+'</li>' + 
									'<li>Angulardistance: '+getValue(d[x].star.angulardistance)+'</li>' + 
									'<li>Distance: '+getValue(d[x].star.distance)+'</li>' + 
									'<li>magV: '+getValue(d[x].star.magV)+'</li>' + 
									'<li>magI: '+getValue(d[x].star.magI)+'</li>' + 
									'<li>magH: '+getValue(d[x].star.magH)+'</li>' + 
									'<li>magJ: '+getValue(d[x].star.magJ)+'</li>' + 
									'<li>magK: '+getValue(d[x].star.magK)+'</li>' + 
								'</ul>' + 
							'</li>';


					text += '<li><strong>Multiplicity:</strong> '+getValue(d[x].multiplicity)+'</li>' +
							'<li><strong>Discovery Year:</strong> '+getValue(d[x].discoveryyear)+'</li>' +
							'<li><strong>Last Update:</strong> '+getValue(d[x].lastupdate)+'</li>' +
							'<li><strong>Description:</strong> '+getValue(d[x].description)+'</li>' +
							'<li><strong>New:</strong>'+getValue(d[x].new)+'</li>';

					text += '</ul>';


					text += '</div>';

  				text += "</li><div class='clear'></div>";

  				$("ul.planets").append(text);
  			}
  		},
  		async: false,
  		dataType: "json"
  	});


	Exo.initGlobalApp();
	$('ul.planets').expander();
	$('a.expand-image').lightBox();
	$('body').navigate();
});

function isEmpty(map) {
   for(var key in map) {
      if (map.hasOwnProperty(key)) 
         return false;
   }
   return true;
}


function is_number(input){
	return typeof(input)=='number'&&parseFloat(input)==input;
}

function getValue(v)
{
	if(is_number(v)) return v + "";
	return (isEmpty(v) ? "N/A" : v.toString());
}

</script>
</body>  
</html>  





